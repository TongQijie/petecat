{"id":"3ixpc1re3x0","creationDate":"2016-09-20T16:00:00.000Z","modifiedDate":"2016-10-05T08:48:14.679Z","title":"vim editor","abstract":"this is a powerful code editor.","content":"<h3>vim<\/h3>\n<pre>git clone https:\/\/github.com\/vim\/vim.git [Local Directory]<\/pre>\n<p>上面这条命令获取vim源代码。<\/p>\n<pre>.\/configure --enable-cscope --enable-pythoninterp --with-python-config-dir\nmake test\nsudo make install<\/pre>\n<p>上面几条命令完成vim的安装。<\/p>\n<h3>Session &amp; Viminfo<\/h3>\n<p>创建和恢复session文件。session中保存了所有窗口的视图，外加全局设置。<\/p>\n<pre>:mksession [File]\n:source [File]<\/pre>\n<p>创建和恢复vininfo文件。viminfo中保存了命令行历史(history)、搜索字符串历史(search)、输入行历史、非空的寄存器内容(register)、文件的位置标记(mark)、最近搜索\/替换的模式、缓冲区列表、全局变量等信息。<\/p>\n<pre>:wviminfo [File]\n:rviminfo [File]<\/pre>\n<h3>$VIM &amp; $VIMRUNTIME<\/h3>\n<p>环境变量$VIM默认为\"\/usr\/share\/vim\"<\/p>\n<blockquote>\n<pre>The environment variable \"<a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#$VIM\">$VIM<\/a>\" is used to locate various user files for Vim,\nsuch <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/motion.html#as\">as<\/a> the user <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#startup\">startup<\/a> <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/usr_41.html#script\">script<\/a> \"<a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#.vimrc\">.vimrc<\/a>\".  This depends on the system, see\n|<a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#startup\">startup<\/a>|.\n\nTo avoid the need for every user to set the <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#$VIM\">$VIM<\/a> environment variable, Vim\nwill try to get the value for <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#$VIM\">$VIM<\/a> in this order:\n1. The value defined by the <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#$VIM\">$VIM<\/a> environment variable.  You can use this to\n   make Vim look in a specific directory for its support files.  Example:\n<strong>\tsetenv VIM \/home\/paul\/vim<\/strong>\n2. The path from <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/options.html#'helpfile'\">'helpfile'<\/a> is used, unless it contains some environment\n   variable too (the default is \"$VIMRUNTIME\/doc\/help.txt\": chicken-egg\n   problem).  The file name (\"help.txt\" or any other) is removed.  Then\n   trailing directory names are removed, in this order: \"doc\", \"runtime\" and\n   \"vim{version}\" (e.g., \"vim54\").\n3. For <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/os_msdos.html#MSDOS\">MSDOS<\/a>, <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/os_win32.html#Win32\">Win32<\/a> and <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/os_os2.html#OS\/2\">OS\/2<\/a> Vim tries to use the directory name of the\n   executable.  If it ends in \"\/src\", this is removed.  This is useful if you\n   unpacked the .zip file in some directory, and adjusted the search path to\n   find the vim executable.  Trailing directory names are removed, in this\n   order: \"runtime\" and \"vim{version}\" (e.g., \"vim54\").\n4. For <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/os_unix.html#Unix\">Unix<\/a> the compile-time defined installation directory is used (see the\n   output of \":version\").\n\nOnce Vim has done this once, it will set the <a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/starting.html#$VIM\">$VIM<\/a> environment variable.  To\nchange it later, use a \"<a href=\"http:\/\/vimdoc.sourceforge.net\/htmldoc\/eval.html#:let\">:let<\/a>\" command like this:\n<strong>\t:let $VIM = \"\/home\/paul\/vim\/\"<\/strong><\/pre>\n<\/blockquote>\n<h3>ctags<\/h3>\n<p>ctags为文件中的各种语言对象生成一个索引（或称为标签）文件。标签文件允许这些项目能够被一个文本编辑器或其它工具简捷迅速的定位。一个标签是指一个语言对象，它对应着一个有效的索引项（或者换言之，这个索引项为这个对象而创建）。<\/p>\n<p>下载地址: <a href=\"http:\/\/ctags.sourceforge.net\" target=\"_blank\">http:\/\/ctags.sourceforge.net<\/a><\/p>\n<pre>.\/configure\nmake\nmake install<\/pre>\n<p>上面命令完成ctags的安装。<\/p>\n<pre>ctags &ndash;R<\/pre>\n<p>上面这条命令会在当前工作目录下生成一个名为\"tags\"的文件，这个文件中包含当前工作目录下所有.c、.h文件中的标签。<\/p>\n<pre>:set tags=tags<\/pre>\n<p>上面这条命令设置当前工作目录下\"tags\"文件作为vim的tags文件。<\/p>\n<h3>plugin: taglist<\/h3>\n<p>插件下载地址: <a href=\"http:\/\/www.vim.org\/scripts\/script.php?script_id=273\" target=\"_blank\">http:\/\/www.vim.org\/scripts\/script.php?script_id=273<\/a><\/p>\n<p>插件安装: 解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<pre>let Tlist_Ctags_Cmd = '\/usr\/local\/bin\/ctags'<\/pre>\n<p>在\".vimrc\"文件中配置taglist插件所要所用的ctags命令的路径。<\/p>\n<pre>:TlistOpen<\/pre>\n<p>上面这条命令在vim中打开taglist窗口。<\/p>\n<h3>plugin: netrw<\/h3>\n<p>netrw.vim是vim的标准插件，它已经伴随vim而发行，不需要安装。<\/p>\n<pre>:e ~\/<\/pre>\n<p>使用vim尝试打开目录时，vim会自动调用netrw.vim插件打开该目录。<\/p>\n<h3>plugin: NERD tree<\/h3>\n<p>NERD tree是一款目录浏览插件。<\/p>\n<p>插件下载地址: <a href=\"http:\/\/www.vim.org\/scripts\/script.php?script_id=1658\" target=\"_blank\">http:\/\/www.vim.org\/scripts\/script.php?script_id=1658<\/a><\/p>\n<p>插件安装:&nbsp;解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<pre>:NERDTreeToggle<\/pre>\n<p>上面这条命令用于打开或关闭目录浏览缓冲区。<\/p>\n<h3>plugin: BufExplorer<\/h3>\n<p>插件下载地址: <a href=\"http:\/\/vim.sourceforge.net\/scripts\/script.php?script_id=42\" target=\"_blank\">http:\/\/vim.sourceforge.net\/scripts\/script.php?script_id=42<\/a><\/p>\n<p>插件安装: 解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<pre>\\be<\/pre>\n<p>上面这条命令以全屏方式打开缓冲区列表。<\/p>\n<pre>\\bs<\/pre>\n<p>上面这条命令以水平窗口打来缓冲区列表。<\/p>\n<pre>\\bv<\/pre>\n<p>上面这条命令以垂直窗口打开缓冲区列表。<\/p>\n<h3>plugin: winmanager<\/h3>\n<p>插件下载地址: <a href=\"http:\/\/vim.sourceforge.net\/scripts\/script.php?script_id=95\" target=\"_blank\">http:\/\/vim.sourceforge.net\/scripts\/script.php?script_id=95<\/a><\/p>\n<p>插件安装: 解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<pre>:WMToggle<\/pre>\n<p>上面这条命令打开或关闭winmanager插件。<\/p>\n<h3>plugin: lookupfile<\/h3>\n<p>插件lookupfile需要genutils插件支持。<\/p>\n<p>genutils插件下载地址: <a href=\"http:\/\/www.vim.org\/scripts\/script.php?script_id=197\" target=\"_blank\">http:\/\/www.vim.org\/scripts\/script.php?script_id=197<\/a><\/p>\n<p>插件安装: 解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<p>lookupfile插件下载地址: <a href=\"http:\/\/www.vim.org\/scripts\/script.php?script_id=1581\" target=\"_blank\">http:\/\/www.vim.org\/scripts\/script.php?script_id=1581<\/a><\/p>\n<p>插件安装: 解压文件，拷贝到\"~\/.vim\/\"目录下。<\/p>\n<pre>:LookupFile<\/pre>\n<p>上面这条命令开启文件查找窗口，可通过输入正则表达式来查找项目中包含的文件。<\/p>\n<pre>:LUBufs<\/pre>\n<p>上面这条命令开启缓冲区查找窗口，可通过输入正则表达式来查找已打开的缓冲区。<\/p>\n<pre>:LUWalk<\/pre>\n<p>上面这条命令开启目录查找窗口。<\/p>\n<h3>cscope<\/h3>\n<p>cscope支持对函数、宏、枚举等定义位置的查询，函数调用的查询。<\/p>\n<p>需要注意的是，要在vim中使用cscope，需要在编译vim时设置参数\"--enable-cscope\"。<\/p>\n<p>下载地址: <a href=\"http:\/\/cscope.sourceforge.net\/\" target=\"_blank\">http:\/\/cscope.sourceforge.net\/<\/a><\/p>\n<pre>.\/configure\nmake\nmake install <\/pre>\n<p>上面几条命令完成cscope的安装。<\/p>\n<pre>cscope -Rbq<\/pre>\n<p>上面这条命令对当前工作目录下所有文件生成索引文件。这条命令会生成三个文件：cscope.out、cscope.in.out、cscope.po.out。其中cscope.out是基本的符号索引。<\/p>\n<pre>:cscope add<\/pre>\n<p>上面这条命令对vim设置cscope索引文件。<\/p>\n<pre>:cscope find [Args] [Index]<\/pre>\n<p>上面这条命令执行查询命令。<\/p>\n<p>其中[Args]允许以下值:<\/p>\n<ul>\n<li>s: 查找C语言符号，即查找函数名、宏、枚举值等出现的位置。<\/li>\n<li>g: 查找函数、宏、枚举等定义的位置。<\/li>\n<li>d: 查找本函数调用的函数。<\/li>\n<li>c: 查找调用本函数的函数。<\/li>\n<li>t: 查找指定的字符串。<\/li>\n<li>e: 查找egrep模式。<\/li>\n<li>f: 查找并打开文件。<\/li>\n<li>i: 查找包含本文件的文件。<\/li>\n<\/ul>\n<h3>quickfix<\/h3>\n<p>quickfix保存一个位置列表，然后提供一系列命令，实现在这个位置列表中跳转。<\/p>\n<pre>:set makeprg=[Build Command]<\/pre>\n<p>上面这条命令用于设置vim当前的编译命令。<\/p>\n<pre>:make<\/pre>\n<p>上面这条命令执行编译操作。如设置了makeprg则调用设置的编译命令，否则读取当前目录下的Makefile文件。<\/p>\n<p>当编译出现错误时，vim会从上述临时文件中读出错误信息，根据这些信息形成quickfix列表，并跳转到第一个错误出现的地方。<\/p>\n<pre>:cc<\/pre>\n<p>上面这条命令显示详细错误信息。<\/p>\n<pre>:cw<\/pre>\n<p>上面这条命令打开一个quickfix窗口，把所有的出错信息显示出来。<\/p>\n<pre>:cn<\/pre>\n<p>上面这条命令跳到下一个错误。<\/p>\n<pre>:cp<\/pre>\n<p>上面这条命令跳到上一个错误。<\/p>","signature":null,"deleted":false}